// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OpenTelemetryAdapter processes app event as span 1`] = `Array []`;

exports[`OpenTelemetryAdapter processes app event as span 2`] = `
Array [
  Span {
    "_duration": Array [
      0,
      81078,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "358465fec04f0b56",
      "traceFlags": 1,
      "traceId": "264be1a778afaf3d1164aa9fc45cc95b",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            [Circular],
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": Timeout {
                "_destroyed": false,
                "_idleNext": TimersList {
                  "_idleNext": [Circular],
                  "_idlePrev": [Circular],
                  "expiry": 11739,
                  "id": -9007199254740984,
                  "msecs": 5000,
                  "priorityQueuePosition": 1,
                },
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6750,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 99,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": Timeout {
                  "_destroyed": false,
                  "_idleNext": [Circular],
                  "_idlePrev": [Circular],
                  "_idleStart": 6750,
                  "_idleTimeout": 5000,
                  "_onTimeout": [Function],
                  "_repeat": null,
                  "_timerArgs": undefined,
                  Symbol(refed): false,
                  Symbol(kHasPrimitive): false,
                  Symbol(asyncId): 99,
                  Symbol(triggerId): 0,
                },
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6765,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 102,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "name": "my custom event",
      "parentSpanId": "12345",
      "spanKind": 0,
      "startTime": 1620155556185000,
    },
    "endTime": Array [
      1625764422,
      347140131,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "my custom event",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      347059053,
    ],
    "status": Object {
      "code": 1,
    },
  },
]
`;

exports[`OpenTelemetryAdapter processes app exception as span 1`] = `Array []`;

exports[`OpenTelemetryAdapter processes app exception as span 2`] = `
Array [
  Span {
    "_duration": Array [
      0,
      55094,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "6b52797ca8cf8e0f",
      "traceFlags": 1,
      "traceId": "4d7a5b1dde50fe771ffe5519aedb8ede",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            [Circular],
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": Timeout {
                "_destroyed": false,
                "_idleNext": Timeout {
                  "_destroyed": false,
                  "_idleNext": TimersList {
                    "_idleNext": [Circular],
                    "_idlePrev": [Circular],
                    "expiry": 11739,
                    "id": -9007199254740984,
                    "msecs": 5000,
                    "priorityQueuePosition": 1,
                  },
                  "_idlePrev": [Circular],
                  "_idleStart": 6739,
                  "_idleTimeout": 5000,
                  "_onTimeout": [Function],
                  "_repeat": null,
                  "_timerArgs": undefined,
                  Symbol(refed): false,
                  Symbol(kHasPrimitive): false,
                  Symbol(asyncId): 96,
                  Symbol(triggerId): 0,
                },
                "_idlePrev": [Circular],
                "_idleStart": 6750,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 99,
                Symbol(triggerId): 0,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6765,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 102,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": Timeout {
                  "_destroyed": false,
                  "_idleNext": [Circular],
                  "_idlePrev": Timeout {
                    "_destroyed": false,
                    "_idleNext": [Circular],
                    "_idlePrev": [Circular],
                    "_idleStart": 6765,
                    "_idleTimeout": 5000,
                    "_onTimeout": [Function],
                    "_repeat": null,
                    "_timerArgs": undefined,
                    Symbol(refed): false,
                    Symbol(kHasPrimitive): false,
                    Symbol(asyncId): 102,
                    Symbol(triggerId): 0,
                  },
                  "_idleStart": 6750,
                  "_idleTimeout": 5000,
                  "_onTimeout": [Function],
                  "_repeat": null,
                  "_timerArgs": undefined,
                  Symbol(refed): false,
                  Symbol(kHasPrimitive): false,
                  Symbol(asyncId): 99,
                  Symbol(triggerId): 0,
                },
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6768,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 105,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "name": "at module.exports (C:/home/site/wwwroot/functionName/index.js:266:43)",
      "parentSpanId": "{long operation id}",
      "spanKind": 0,
      "startTime": 1620233096802000,
    },
    "endTime": Array [
      1625764422,
      350111105,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "at module.exports (C:/home/site/wwwroot/functionName/index.js:266:43)",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      350056011,
    ],
    "status": Object {
      "code": 2,
      "message": "Error: Throwing an uncaught error on purpose.",
    },
  },
]
`;

exports[`OpenTelemetryAdapter processes app request and dependency as spans 1`] = `Array []`;

exports[`OpenTelemetryAdapter processes app request and dependency as spans 2`] = `
Array [
  Span {
    "_duration": Array [
      0,
      615166,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "bd6aa079b219d015",
      "traceFlags": 1,
      "traceId": "600bbadeb879b2d44e34e92cb5327286",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            [Circular],
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": [Circular],
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": [Circular],
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6739,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 96,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 9159.3,
      "endTime": 1619736074132159.2,
      "name": "{function name}",
      "parentSpanId": "12345",
      "spanKind": 0,
      "startTime": 1619736074123000,
    },
    "endTime": Array [
      1625764422,
      320977503,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "{function name}",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      320362337,
    ],
    "status": Object {
      "code": 1,
    },
  },
]
`;

exports[`OpenTelemetryAdapter processes app request and dependency as spans 3`] = `
Array [
  Span {
    "_duration": Array [
      0,
      615166,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "bd6aa079b219d015",
      "traceFlags": 1,
      "traceId": "600bbadeb879b2d44e34e92cb5327286",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            [Circular],
            Span {
              "_duration": Array [
                0,
                84706,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "e5d4363d51961402",
                "traceFlags": 1,
                "traceId": "d7f090c71781b52355595f2a143a54ad",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620165671171000,
                "name": "External/{name property of client.trackDependency}",
                "parentSpanId": "12345",
                "spanKind": 0,
                "startTime": 1620165670940000,
              },
              "endTime": Array [
                1625764422,
                324159613,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "External/{name property of client.trackDependency}",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                324074907,
              ],
              "status": Object {
                "code": 1,
              },
            },
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": [Circular],
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": [Circular],
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6739,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 96,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 9159.3,
      "endTime": 1619736074132159.2,
      "name": "{function name}",
      "parentSpanId": "12345",
      "spanKind": 0,
      "startTime": 1619736074123000,
    },
    "endTime": Array [
      1625764422,
      320977503,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "{function name}",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      320362337,
    ],
    "status": Object {
      "code": 1,
    },
  },
  Span {
    "_duration": Array [
      0,
      84706,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "e5d4363d51961402",
      "traceFlags": 1,
      "traceId": "d7f090c71781b52355595f2a143a54ad",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            Span {
              "_duration": Array [
                0,
                615166,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "bd6aa079b219d015",
                "traceFlags": 1,
                "traceId": "600bbadeb879b2d44e34e92cb5327286",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 9159.3,
                "endTime": 1619736074132159.2,
                "name": "{function name}",
                "parentSpanId": "12345",
                "spanKind": 0,
                "startTime": 1619736074123000,
              },
              "endTime": Array [
                1625764422,
                320977503,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "{function name}",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                320362337,
              ],
              "status": Object {
                "code": 1,
              },
            },
            [Circular],
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": [Circular],
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": [Circular],
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6739,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 96,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 231000,
      "endTime": 1620165671171000,
      "name": "External/{name property of client.trackDependency}",
      "parentSpanId": "12345",
      "spanKind": 0,
      "startTime": 1620165670940000,
    },
    "endTime": Array [
      1625764422,
      324159613,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "External/{name property of client.trackDependency}",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      324074907,
    ],
    "status": Object {
      "code": 1,
    },
  },
]
`;

exports[`OpenTelemetryAdapter processes app request and dependency when sent as array of strings 1`] = `Array []`;

exports[`OpenTelemetryAdapter processes app request and dependency when sent as array of strings 2`] = `
Array [
  Span {
    "_duration": Array [
      0,
      106373,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "6490684bb3683f87",
      "traceFlags": 1,
      "traceId": "9fb984901eed0864d75be6ac8a2c7087",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            [Circular],
            Span {
              "_duration": Array [
                0,
                54110,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "69da0a691c2c81ff",
                "traceFlags": 1,
                "traceId": "9d2803d1b83c1872f81323ba97e277af",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372280000,
                "name": "select customers proc",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674372049000,
              },
              "endTime": Array [
                1625764422,
                331828725,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "select customers proc",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331774615,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                49469,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "930a19f9748df8e0",
                "traceFlags": 1,
                "traceId": "9b24b2f922e7259a520d35d7bf24e39f",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 30021545.7,
                "endTime": 1620674391081545.8,
                "name": "functionName",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674361060000,
              },
              "endTime": Array [
                1625764422,
                332202836,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "functionName",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                332153367,
              ],
              "status": Object {
                "code": 1,
              },
            },
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": TimersList {
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "expiry": 11739,
                "id": -9007199254740984,
                "msecs": 5000,
                "priorityQueuePosition": 1,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6739,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 96,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6750,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 99,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 231000,
      "endTime": 1620674372139000,
      "name": "node buffer",
      "parentSpanId": "parentId",
      "spanKind": 0,
      "startTime": 1620674371908000,
    },
    "endTime": Array [
      1625764422,
      331477923,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "node buffer",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      331371550,
    ],
    "status": Object {
      "code": 1,
    },
  },
  Span {
    "_duration": Array [
      0,
      54110,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "69da0a691c2c81ff",
      "traceFlags": 1,
      "traceId": "9d2803d1b83c1872f81323ba97e277af",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            Span {
              "_duration": Array [
                0,
                106373,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "6490684bb3683f87",
                "traceFlags": 1,
                "traceId": "9fb984901eed0864d75be6ac8a2c7087",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372139000,
                "name": "node buffer",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674371908000,
              },
              "endTime": Array [
                1625764422,
                331477923,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "node buffer",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331371550,
              ],
              "status": Object {
                "code": 1,
              },
            },
            [Circular],
            Span {
              "_duration": Array [
                0,
                49469,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "930a19f9748df8e0",
                "traceFlags": 1,
                "traceId": "9b24b2f922e7259a520d35d7bf24e39f",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 30021545.7,
                "endTime": 1620674391081545.8,
                "name": "functionName",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674361060000,
              },
              "endTime": Array [
                1625764422,
                332202836,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "functionName",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                332153367,
              ],
              "status": Object {
                "code": 1,
              },
            },
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": TimersList {
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "expiry": 11739,
                "id": -9007199254740984,
                "msecs": 5000,
                "priorityQueuePosition": 1,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6739,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 96,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6750,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 99,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 231000,
      "endTime": 1620674372280000,
      "name": "select customers proc",
      "parentSpanId": "parentId",
      "spanKind": 0,
      "startTime": 1620674372049000,
    },
    "endTime": Array [
      1625764422,
      331828725,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "select customers proc",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      331774615,
    ],
    "status": Object {
      "code": 1,
    },
  },
  Span {
    "_duration": Array [
      0,
      49469,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "930a19f9748df8e0",
      "traceFlags": 1,
      "traceId": "9b24b2f922e7259a520d35d7bf24e39f",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            Span {
              "_duration": Array [
                0,
                106373,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "6490684bb3683f87",
                "traceFlags": 1,
                "traceId": "9fb984901eed0864d75be6ac8a2c7087",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372139000,
                "name": "node buffer",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674371908000,
              },
              "endTime": Array [
                1625764422,
                331477923,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "node buffer",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331371550,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                54110,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "69da0a691c2c81ff",
                "traceFlags": 1,
                "traceId": "9d2803d1b83c1872f81323ba97e277af",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372280000,
                "name": "select customers proc",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674372049000,
              },
              "endTime": Array [
                1625764422,
                331828725,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "select customers proc",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331774615,
              ],
              "status": Object {
                "code": 1,
              },
            },
            [Circular],
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": TimersList {
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "expiry": 11739,
                "id": -9007199254740984,
                "msecs": 5000,
                "priorityQueuePosition": 1,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6739,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 96,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6750,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 99,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 30021545.7,
      "endTime": 1620674391081545.8,
      "name": "functionName",
      "parentSpanId": "parentId",
      "spanKind": 0,
      "startTime": 1620674361060000,
    },
    "endTime": Array [
      1625764422,
      332202836,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "functionName",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      332153367,
    ],
    "status": Object {
      "code": 1,
    },
  },
]
`;

exports[`OpenTelemetryAdapter processes app request and dependency when sent as array of strings 3`] = `
Array [
  Span {
    "_duration": Array [
      0,
      106373,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "6490684bb3683f87",
      "traceFlags": 1,
      "traceId": "9fb984901eed0864d75be6ac8a2c7087",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            [Circular],
            Span {
              "_duration": Array [
                0,
                54110,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "69da0a691c2c81ff",
                "traceFlags": 1,
                "traceId": "9d2803d1b83c1872f81323ba97e277af",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372280000,
                "name": "select customers proc",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674372049000,
              },
              "endTime": Array [
                1625764422,
                331828725,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "select customers proc",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331774615,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                49469,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "930a19f9748df8e0",
                "traceFlags": 1,
                "traceId": "9b24b2f922e7259a520d35d7bf24e39f",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 30021545.7,
                "endTime": 1620674391081545.8,
                "name": "functionName",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674361060000,
              },
              "endTime": Array [
                1625764422,
                332202836,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "functionName",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                332153367,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                76117,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "3971f5a85a1bf1b8",
                "traceFlags": 1,
                "traceId": "2f745698849a37e39426107f5ecbda9c",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620165671171000,
                "name": "External/{name property of client.trackDependency}",
                "parentSpanId": "12345",
                "spanKind": 0,
                "startTime": 1620165670940000,
              },
              "endTime": Array [
                1625764422,
                337852967,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "External/{name property of client.trackDependency}",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                337776850,
              ],
              "status": Object {
                "code": 1,
              },
            },
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": TimersList {
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "expiry": 11739,
                "id": -9007199254740984,
                "msecs": 5000,
                "priorityQueuePosition": 1,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6739,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 96,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6750,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 99,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 231000,
      "endTime": 1620674372139000,
      "name": "node buffer",
      "parentSpanId": "parentId",
      "spanKind": 0,
      "startTime": 1620674371908000,
    },
    "endTime": Array [
      1625764422,
      331477923,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "node buffer",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      331371550,
    ],
    "status": Object {
      "code": 1,
    },
  },
  Span {
    "_duration": Array [
      0,
      54110,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "69da0a691c2c81ff",
      "traceFlags": 1,
      "traceId": "9d2803d1b83c1872f81323ba97e277af",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            Span {
              "_duration": Array [
                0,
                106373,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "6490684bb3683f87",
                "traceFlags": 1,
                "traceId": "9fb984901eed0864d75be6ac8a2c7087",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372139000,
                "name": "node buffer",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674371908000,
              },
              "endTime": Array [
                1625764422,
                331477923,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "node buffer",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331371550,
              ],
              "status": Object {
                "code": 1,
              },
            },
            [Circular],
            Span {
              "_duration": Array [
                0,
                49469,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "930a19f9748df8e0",
                "traceFlags": 1,
                "traceId": "9b24b2f922e7259a520d35d7bf24e39f",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 30021545.7,
                "endTime": 1620674391081545.8,
                "name": "functionName",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674361060000,
              },
              "endTime": Array [
                1625764422,
                332202836,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "functionName",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                332153367,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                76117,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "3971f5a85a1bf1b8",
                "traceFlags": 1,
                "traceId": "2f745698849a37e39426107f5ecbda9c",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620165671171000,
                "name": "External/{name property of client.trackDependency}",
                "parentSpanId": "12345",
                "spanKind": 0,
                "startTime": 1620165670940000,
              },
              "endTime": Array [
                1625764422,
                337852967,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "External/{name property of client.trackDependency}",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                337776850,
              ],
              "status": Object {
                "code": 1,
              },
            },
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": TimersList {
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "expiry": 11739,
                "id": -9007199254740984,
                "msecs": 5000,
                "priorityQueuePosition": 1,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6739,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 96,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6750,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 99,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 231000,
      "endTime": 1620674372280000,
      "name": "select customers proc",
      "parentSpanId": "parentId",
      "spanKind": 0,
      "startTime": 1620674372049000,
    },
    "endTime": Array [
      1625764422,
      331828725,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "select customers proc",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      331774615,
    ],
    "status": Object {
      "code": 1,
    },
  },
  Span {
    "_duration": Array [
      0,
      49469,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "930a19f9748df8e0",
      "traceFlags": 1,
      "traceId": "9b24b2f922e7259a520d35d7bf24e39f",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            Span {
              "_duration": Array [
                0,
                106373,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "6490684bb3683f87",
                "traceFlags": 1,
                "traceId": "9fb984901eed0864d75be6ac8a2c7087",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372139000,
                "name": "node buffer",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674371908000,
              },
              "endTime": Array [
                1625764422,
                331477923,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "node buffer",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331371550,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                54110,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "69da0a691c2c81ff",
                "traceFlags": 1,
                "traceId": "9d2803d1b83c1872f81323ba97e277af",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372280000,
                "name": "select customers proc",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674372049000,
              },
              "endTime": Array [
                1625764422,
                331828725,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "select customers proc",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331774615,
              ],
              "status": Object {
                "code": 1,
              },
            },
            [Circular],
            Span {
              "_duration": Array [
                0,
                76117,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "3971f5a85a1bf1b8",
                "traceFlags": 1,
                "traceId": "2f745698849a37e39426107f5ecbda9c",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620165671171000,
                "name": "External/{name property of client.trackDependency}",
                "parentSpanId": "12345",
                "spanKind": 0,
                "startTime": 1620165670940000,
              },
              "endTime": Array [
                1625764422,
                337852967,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "External/{name property of client.trackDependency}",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                337776850,
              ],
              "status": Object {
                "code": 1,
              },
            },
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": TimersList {
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "expiry": 11739,
                "id": -9007199254740984,
                "msecs": 5000,
                "priorityQueuePosition": 1,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6739,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 96,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6750,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 99,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 30021545.7,
      "endTime": 1620674391081545.8,
      "name": "functionName",
      "parentSpanId": "parentId",
      "spanKind": 0,
      "startTime": 1620674361060000,
    },
    "endTime": Array [
      1625764422,
      332202836,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "functionName",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      332153367,
    ],
    "status": Object {
      "code": 1,
    },
  },
  Span {
    "_duration": Array [
      0,
      76117,
    ],
    "_ended": true,
    "_spanContext": Object {
      "spanId": "3971f5a85a1bf1b8",
      "traceFlags": 1,
      "traceId": "2f745698849a37e39426107f5ecbda9c",
      "traceState": undefined,
    },
    "_spanLimits": Object {
      "attributeCountLimit": 128,
      "eventCountLimit": 128,
      "linkCountLimit": 128,
    },
    "_spanProcessor": MultiSpanProcessor {
      "_spanProcessors": Array [
        BatchSpanProcessor {
          "_exportTimeoutMillis": 30000,
          "_exporter": CollectorTraceExporter {
            "DEFAULT_HEADERS": Object {
              "api-key": "mock-insert-key",
            },
            "_concurrencyLimit": Infinity,
            "_isShutdown": false,
            "_sendingPromises": Array [],
            "_shuttingDownPromise": Promise {},
            "agent": Agent {
              "_events": Object {
                "free": [Function],
                "newListener": [Function],
              },
              "_eventsCount": 2,
              "_maxListeners": undefined,
              "_sessionCache": Object {
                "list": Array [],
                "map": Object {},
              },
              "defaultPort": 443,
              "freeSockets": Object {},
              "keepAlive": true,
              "keepAliveMsecs": 1000,
              "maxCachedSessions": 100,
              "maxFreeSockets": 256,
              "maxSockets": Infinity,
              "maxTotalSockets": Infinity,
              "options": Object {
                "keepAlive": true,
                "path": null,
              },
              "protocol": "https:",
              "requests": Object {},
              "scheduling": "fifo",
              "sockets": Object {},
              "totalSocketCount": 0,
              Symbol(kCapture): false,
            },
            "attributes": undefined,
            "headers": Object {
              "api-key": "mock-insert-key",
            },
            "shutdown": [Function],
            "url": "https://otlp.nr-data.net:4317/v1/traces",
          },
          "_finishedSpans": Array [
            Span {
              "_duration": Array [
                0,
                106373,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "6490684bb3683f87",
                "traceFlags": 1,
                "traceId": "9fb984901eed0864d75be6ac8a2c7087",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372139000,
                "name": "node buffer",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674371908000,
              },
              "endTime": Array [
                1625764422,
                331477923,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "node buffer",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331371550,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                54110,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "69da0a691c2c81ff",
                "traceFlags": 1,
                "traceId": "9d2803d1b83c1872f81323ba97e277af",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 231000,
                "endTime": 1620674372280000,
                "name": "select customers proc",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674372049000,
              },
              "endTime": Array [
                1625764422,
                331828725,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "select customers proc",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                331774615,
              ],
              "status": Object {
                "code": 1,
              },
            },
            Span {
              "_duration": Array [
                0,
                49469,
              ],
              "_ended": true,
              "_spanContext": Object {
                "spanId": "930a19f9748df8e0",
                "traceFlags": 1,
                "traceId": "9b24b2f922e7259a520d35d7bf24e39f",
                "traceState": undefined,
              },
              "_spanLimits": Object {
                "attributeCountLimit": 128,
                "eventCountLimit": 128,
                "linkCountLimit": 128,
              },
              "_spanProcessor": [Circular],
              "attributes": Object {
                "duration": 30021545.7,
                "endTime": 1620674391081545.8,
                "name": "functionName",
                "parentSpanId": "parentId",
                "spanKind": 0,
                "startTime": 1620674361060000,
              },
              "endTime": Array [
                1625764422,
                332202836,
              ],
              "events": Array [],
              "instrumentationLibrary": Object {
                "name": "default",
                "version": undefined,
              },
              "kind": 0,
              "links": Array [],
              "name": "functionName",
              "parentSpanId": undefined,
              "resource": Resource {
                "attributes": Object {
                  "service.name": "unknown_service:/usr/local/bin/node",
                  "telemetry.sdk.language": "nodejs",
                  "telemetry.sdk.name": "opentelemetry",
                  "telemetry.sdk.version": "0.23.0",
                },
              },
              "startTime": Array [
                1625764422,
                332153367,
              ],
              "status": Object {
                "code": 1,
              },
            },
            [Circular],
          ],
          "_isShutdown": false,
          "_maxExportBatchSize": 512,
          "_maxQueueSize": 1000,
          "_scheduledDelayMillis": 5000,
          "_shuttingDownPromise": Promise {},
          "_timer": Timeout {
            "_destroyed": false,
            "_idleNext": Timeout {
              "_destroyed": false,
              "_idleNext": TimersList {
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "expiry": 11739,
                "id": -9007199254740984,
                "msecs": 5000,
                "priorityQueuePosition": 1,
              },
              "_idlePrev": [Circular],
              "_idleStart": 6739,
              "_idleTimeout": 5000,
              "_onTimeout": [Function],
              "_repeat": null,
              "_timerArgs": undefined,
              Symbol(refed): false,
              Symbol(kHasPrimitive): false,
              Symbol(asyncId): 96,
              Symbol(triggerId): 0,
            },
            "_idlePrev": TimersList {
              "_idleNext": [Circular],
              "_idlePrev": Timeout {
                "_destroyed": false,
                "_idleNext": [Circular],
                "_idlePrev": [Circular],
                "_idleStart": 6739,
                "_idleTimeout": 5000,
                "_onTimeout": [Function],
                "_repeat": null,
                "_timerArgs": undefined,
                Symbol(refed): false,
                Symbol(kHasPrimitive): false,
                Symbol(asyncId): 96,
                Symbol(triggerId): 0,
              },
              "expiry": 11739,
              "id": -9007199254740984,
              "msecs": 5000,
              "priorityQueuePosition": 1,
            },
            "_idleStart": 6750,
            "_idleTimeout": 5000,
            "_onTimeout": [Function],
            "_repeat": null,
            "_timerArgs": undefined,
            Symbol(refed): false,
            Symbol(kHasPrimitive): false,
            Symbol(asyncId): 99,
            Symbol(triggerId): 0,
          },
        },
      ],
    },
    "attributes": Object {
      "duration": 231000,
      "endTime": 1620165671171000,
      "name": "External/{name property of client.trackDependency}",
      "parentSpanId": "12345",
      "spanKind": 0,
      "startTime": 1620165670940000,
    },
    "endTime": Array [
      1625764422,
      337852967,
    ],
    "events": Array [],
    "instrumentationLibrary": Object {
      "name": "default",
      "version": undefined,
    },
    "kind": 0,
    "links": Array [],
    "name": "External/{name property of client.trackDependency}",
    "parentSpanId": undefined,
    "resource": Resource {
      "attributes": Object {
        "service.name": "unknown_service:/usr/local/bin/node",
        "telemetry.sdk.language": "nodejs",
        "telemetry.sdk.name": "opentelemetry",
        "telemetry.sdk.version": "0.23.0",
      },
    },
    "startTime": Array [
      1625764422,
      337776850,
    ],
    "status": Object {
      "code": 1,
    },
  },
]
`;
